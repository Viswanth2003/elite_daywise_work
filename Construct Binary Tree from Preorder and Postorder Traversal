class Solution {
    public TreeNode cT(int[] preorder,int[] inorder,int start,int end,int[] cur,HashMap<Integer,Integer> hm){
        if(cur[0]==preorder.length || end < start) return null;
        System.out.println(cur[0]);
        TreeNode node = new TreeNode(preorder[cur[0]++]);
        if(start==end){
            return node;
        }
        if(cur[0]==preorder.length){
            return node;
        }
        int index = hm.get(preorder[cur[0]]);
        node.left = cT(preorder,inorder,start,index,cur,hm);
        node.right = cT(preorder,inorder,index+1,end-1,cur,hm);
        return node;
    }
    public TreeNode constructFromPrePost(int[] preorder, int[] postorder) {
        HashMap<Integer,Integer> hm = new HashMap<>();
        for(int i=0;i<postorder.length;i++){
            hm.put(postorder[i],i);
        }
        int [] cur= {0};
        return cT(preorder,postorder,0,postorder.length-1,cur,hm);      
    }
}
