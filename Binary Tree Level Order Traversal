class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> list = new LinkedList<List<Integer>>();
        if(root==null){
            return list;
        }
        Queue<TreeNode> qu = new LinkedList<>();
        qu.offer(root);
        while(!qu.isEmpty()){
            int size = qu.size();
            List<Integer> subList = new LinkedList<Integer>();
            for(int i=0; i<size; i++){
                TreeNode cur=qu.poll();
                subList.add(cur.val);
                if(cur.left!=null){
                    qu.offer(cur.left);
                }

                if(cur.right!=null){
                    qu.offer(cur.right);
                }
            }
            list.add(subList);
        }
        return list;
    }
}
