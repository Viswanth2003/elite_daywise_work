class Solution {
    public TreeNode cT(int[] preorder,int[] inorder,int start,int end,int[] cur,HashMap<Integer,Integer> hm){
        if(cur[0]==preorder.length || end < start || start<0) return null;
        TreeNode node = new TreeNode(preorder[cur[0]]);
        int index = hm.get(preorder[cur[0]]);
        cur[0]++;
        node.left = cT(preorder,inorder,start,index-1,cur,hm);
        node.right = cT(preorder,inorder,index+1,end,cur,hm);
        return node;
    }
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        HashMap<Integer,Integer> hm = new HashMap<>();
        for(int i=0;i<inorder.length;i++){
            hm.put(inorder[i],i);
        }
        int [] cur= {0};
        return cT(preorder,inorder,0,preorder.length-1,cur,hm);

    }
}
